name: 'npm-release-action'
description: 'releases a package to the npm registry'
author: 'Spendesk'
inputs:
  use-semantic-release:
    description: 'Uses semantic-release to automate the release process (package version number / release note)'
    default: 'true'
runs:
  using: "composite"
  steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        shell: 'bash'

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-

      - name: Install dependencies
        run: |
          if ${{ steps.yarn-cache.outputs.cache-hit }} = 'true'
          then
            echo "Cache hit - skipping dependency installation"
          else
            yarn install --frozen-lockfile
          fi
        shell: 'bash'

      - name: Build
        run: yarn run build
        shell: 'bash'

      - name: Release
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ env.NPM_TOKEN }}
        run: |
          if ${{ inputs.use-semantic-release }} = 'true'
          then
            echo "Using semantic release" &
            npx -p semantic-release -p conventional-changelog-conventionalcommits -c semantic-release
          else
            yarn publish
          fi
        shell: bash